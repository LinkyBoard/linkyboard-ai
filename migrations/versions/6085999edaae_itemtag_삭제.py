"""itemtag 삭제

Revision ID: 6085999edaae
Revises: f7676b43ecc7
Create Date: 2025-08-07 22:07:54.850665

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
# pgvector 관련 import (필요시)
# import pgvector.sqlalchemy
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6085999edaae'
down_revision: Union[str, Sequence[str], None] = 'f7676b43ecc7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_item_tags_confidence'), table_name='item_tags')
    op.drop_index(op.f('ix_item_tags_item_id'), table_name='item_tags')
    op.drop_index(op.f('ix_item_tags_item_tag'), table_name='item_tags')
    op.drop_index(op.f('ix_item_tags_tag'), table_name='item_tags')
    op.drop_index(op.f('ix_item_tags_type'), table_name='item_tags')
    op.drop_index(op.f('ix_item_tags_type_confidence'), table_name='item_tags')
    op.drop_index(op.f('ix_item_tags_user_id'), table_name='item_tags')
    op.drop_index(op.f('ix_item_tags_user_tag'), table_name='item_tags')
    op.drop_index(op.f('ix_item_tags_user_type'), table_name='item_tags')
    op.drop_table('item_tags')
    op.add_column('items', sa.Column('memo', sa.Text(), nullable=True, comment='사용자 메모'))
    op.add_column('items', sa.Column('tags', sa.JSON(), nullable=True, comment='아이템 태그 (JSON 형태로 저장)'))
    op.drop_column('items', 'user_memo')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('items', sa.Column('user_memo', sa.TEXT(), autoincrement=False, nullable=True, comment='사용자 메모'))
    op.drop_column('items', 'tags')
    op.drop_column('items', 'memo')
    op.create_table('item_tags',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False, comment='아이템 태그 ID'),
    sa.Column('item_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='아이템 ID (외래키)'),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='사용자 ID (검색 성능 향상용)'),
    sa.Column('tag', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='태그/키워드명'),
    sa.Column('tag_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='태그 타입: user(사용자), ai(AI추천), system(시스템)'),
    sa.Column('confidence_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='AI 태그의 신뢰도 점수 (0.0-1.0), 사용자 태그는 NULL'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='생성일시'),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('item_tags_item_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('item_tags_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('item_tags_pkey'))
    )
    op.create_index(op.f('ix_item_tags_user_type'), 'item_tags', ['user_id', 'tag_type'], unique=False)
    op.create_index(op.f('ix_item_tags_user_tag'), 'item_tags', ['user_id', 'tag'], unique=False)
    op.create_index(op.f('ix_item_tags_user_id'), 'item_tags', ['user_id'], unique=False)
    op.create_index(op.f('ix_item_tags_type_confidence'), 'item_tags', ['tag_type', 'confidence_score'], unique=False)
    op.create_index(op.f('ix_item_tags_type'), 'item_tags', ['tag_type'], unique=False)
    op.create_index(op.f('ix_item_tags_tag'), 'item_tags', ['tag'], unique=False)
    op.create_index(op.f('ix_item_tags_item_tag'), 'item_tags', ['item_id', 'tag'], unique=True)
    op.create_index(op.f('ix_item_tags_item_id'), 'item_tags', ['item_id'], unique=False)
    op.create_index(op.f('ix_item_tags_confidence'), 'item_tags', ['confidence_score'], unique=False)
    # ### end Alembic commands ###
