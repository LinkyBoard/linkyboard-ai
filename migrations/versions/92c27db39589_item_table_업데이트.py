"""Item Table 업데이트

Revision ID: 92c27db39589
Revises: 
Create Date: 2025-08-07 17:55:25.341599

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
# pgvector 관련 import (필요시)
import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision: str = '92c27db39589'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.execute("CREATE EXTENSION IF NOT EXISTS vector")   # pgvector
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm")  # fuzzy search

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('item_type', sa.String(length=20), nullable=False, comment='아이템 타입: webpage(웹페이지), pdf(PDF문서), youtube(유튜브), image(이미지), document(문서) 등'),
    sa.Column('source_url', sa.String(length=2048), nullable=False, comment='원본 소스 URL'),
    sa.Column('title', sa.String(length=500), nullable=False, comment='제목'),
    sa.Column('thumbnail', sa.Text(), nullable=True, comment='썸네일 이미지 (base64 또는 URL)'),
    sa.Column('description', sa.Text(), nullable=True, comment='설명 또는 요약'),
    sa.Column('summary', sa.Text(), nullable=True, comment='요약'),
    sa.Column('category', sa.String(length=100), nullable=True, comment='카테고리'),
    sa.Column('raw_content', sa.Text(), nullable=True, comment='원본 콘텐츠 (HTML, 텍스트, 메타데이터 등)'),
    sa.Column('content_metadata', sa.Text(), nullable=True, comment='콘텐츠 메타데이터 (JSON 형태)'),
    sa.Column('content_embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=True, comment='콘텐츠 벡터 임베딩'),
    sa.Column('user_memo', sa.Text(), nullable=True, comment='사용자 메모'),
    sa.Column('processing_status', sa.String(length=20), nullable=False, comment='처리 상태: raw(원본만), processed(처리완료), summarized(요약완료), embedded(임베딩완료)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='활성 상태'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='생성일시'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='수정일시'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_items_category', 'items', ['category'], unique=False)
    op.create_index('ix_items_created_at', 'items', ['created_at'], unique=False)
    op.create_index('ix_items_processing_status', 'items', ['processing_status'], unique=False)
    op.create_index(op.f('ix_items_source_url'), 'items', ['source_url'], unique=True)
    op.create_index('ix_items_title_trgm', 'items', ['title'], unique=False, postgresql_using='gin', postgresql_ops={'title': 'gin_trgm_ops'})
    op.create_index('ix_items_type', 'items', ['item_type'], unique=False)
    op.create_index('ix_items_type_status', 'items', ['item_type', 'processing_status'], unique=False)
    op.create_table('search_histories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('query', sa.String(length=500), nullable=False, comment='검색 쿼리'),
    sa.Column('query_embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=True, comment='검색 쿼리 벡터 임베딩'),
    sa.Column('search_type', sa.String(length=20), nullable=False, comment='검색 타입: semantic(의미검색), keyword(키워드검색), mixed(복합검색)'),
    sa.Column('result_count', sa.Integer(), nullable=False, comment='검색 결과 수'),
    sa.Column('search_duration_ms', sa.Integer(), nullable=True, comment='검색 소요시간(밀리초)'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='검색일시'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_search_histories_created_at', 'search_histories', ['created_at'], unique=False)
    op.create_index('ix_search_histories_query', 'search_histories', ['query'], unique=False)
    op.create_index('ix_search_histories_type', 'search_histories', ['search_type'], unique=False)
    op.create_table('item_tags',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False, comment='아이템 ID (외래키)'),
    sa.Column('tag', sa.String(length=100), nullable=False, comment='태그/키워드명'),
    sa.Column('tag_type', sa.String(length=20), nullable=False, comment='태그 타입: user(사용자), ai(AI추천), system(시스템)'),
    sa.Column('confidence_score', sa.Float(), nullable=True, comment='AI 태그의 신뢰도 점수 (0.0-1.0), 사용자 태그는 NULL'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='생성일시'),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_item_tags_confidence', 'item_tags', ['confidence_score'], unique=False)
    op.create_index(op.f('ix_item_tags_item_id'), 'item_tags', ['item_id'], unique=False)
    op.create_index('ix_item_tags_item_tag', 'item_tags', ['item_id', 'tag'], unique=True)
    op.create_index('ix_item_tags_tag', 'item_tags', ['tag'], unique=False)
    op.create_index('ix_item_tags_type', 'item_tags', ['tag_type'], unique=False)
    op.create_index('ix_item_tags_type_confidence', 'item_tags', ['tag_type', 'confidence_score'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_item_tags_type_confidence', table_name='item_tags')
    op.drop_index('ix_item_tags_type', table_name='item_tags')
    op.drop_index('ix_item_tags_tag', table_name='item_tags')
    op.drop_index('ix_item_tags_item_tag', table_name='item_tags')
    op.drop_index(op.f('ix_item_tags_item_id'), table_name='item_tags')
    op.drop_index('ix_item_tags_confidence', table_name='item_tags')
    op.drop_table('item_tags')
    op.drop_index('ix_search_histories_type', table_name='search_histories')
    op.drop_index('ix_search_histories_query', table_name='search_histories')
    op.drop_index('ix_search_histories_created_at', table_name='search_histories')
    op.drop_table('search_histories')
    op.drop_index('ix_items_type_status', table_name='items')
    op.drop_index('ix_items_type', table_name='items')
    op.drop_index('ix_items_title_trgm', table_name='items', postgresql_using='gin', postgresql_ops={'title': 'gin_trgm_ops'})
    op.drop_index(op.f('ix_items_source_url'), table_name='items')
    op.drop_index('ix_items_processing_status', table_name='items')
    op.drop_index('ix_items_created_at', table_name='items')
    op.drop_index('ix_items_category', table_name='items')
    op.drop_table('items')
    # ### end Alembic commands ###
