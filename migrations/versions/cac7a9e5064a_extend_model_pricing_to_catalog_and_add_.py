"""Extend model pricing to catalog and add model picker tables

Revision ID: cac7a9e5064a
Revises: 13b5ead0b510
Create Date: 2025-08-17 20:59:11.976573

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
# pgvector 관련 import (필요시)
# import pgvector.sqlalchemy
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cac7a9e5064a'
down_revision: Union[str, Sequence[str], None] = '13b5ead0b510'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('model_catalog',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='모델 카탈로그 ID'),
    sa.Column('model_name', sa.String(length=100), nullable=False, comment='모델명 (예: gpt-3.5-turbo, text-embedding-3-small)'),
    sa.Column('alias', sa.String(length=100), nullable=False, comment='모델 별칭 (사용자 친화적 이름)'),
    sa.Column('provider', sa.String(length=50), nullable=False, comment='모델 제공자 (openai, anthropic 등)'),
    sa.Column('model_type', sa.String(length=20), nullable=False, comment='모델 유형: llm, embedding'),
    sa.Column('role_mask', sa.Integer(), nullable=False, comment='모델 역할 마스크 (1=LLM, 2=embedding, 4=multimodal)'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='모델 상태 (active, deprecated, beta)'),
    sa.Column('version', sa.String(length=20), nullable=True, comment='모델 버전'),
    sa.Column('price_input', sa.Float(), nullable=True, comment='입력 토큰 가격 (USD/1M)'),
    sa.Column('price_output', sa.Float(), nullable=True, comment='출력 토큰 가격 (USD/1M)'),
    sa.Column('price_embedding', sa.Float(), nullable=True, comment='임베딩 가격 (USD/1M)'),
    sa.Column('weight_input', sa.Float(), nullable=True, comment='입력 토큰 WTU 가중치'),
    sa.Column('weight_output', sa.Float(), nullable=True, comment='출력 토큰 WTU 가중치'),
    sa.Column('weight_embedding', sa.Float(), nullable=True, comment='임베딩 토큰 WTU 가중치'),
    sa.Column('reference_model', sa.String(length=100), nullable=False, comment='기준 모델명'),
    sa.Column('reference_price_input', sa.Float(), nullable=False, comment='기준 입력 가격 (USD/1M)'),
    sa.Column('reference_price_output', sa.Float(), nullable=False, comment='기준 출력 가격 (USD/1M)'),
    sa.Column('cached_factor', sa.Float(), nullable=False, comment='캐시 토큰 할인율'),
    sa.Column('embedding_alpha', sa.Float(), nullable=False, comment='임베딩 가중치 조정 계수'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='활성 상태'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='생성일시'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='수정일시'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model_name')
    )
    op.create_index('ix_model_catalog_alias', 'model_catalog', ['alias'], unique=False)
    op.create_index('ix_model_catalog_name', 'model_catalog', ['model_name'], unique=False)
    op.create_index('ix_model_catalog_provider', 'model_catalog', ['provider'], unique=False)
    op.create_index('ix_model_catalog_status', 'model_catalog', ['status'], unique=False)
    op.create_index('ix_model_catalog_type_status', 'model_catalog', ['model_type', 'status'], unique=False)
    op.create_table('board_model_policy',
    sa.Column('board_id', sa.UUID(), nullable=False, comment='보드 ID'),
    sa.Column('default_model_id', sa.Integer(), nullable=True, comment='기본 모델 ID (외래키)'),
    sa.Column('allowed_model_ids', sa.ARRAY(sa.Integer()), nullable=True, comment='허용 모델 ID 배열'),
    sa.Column('budget_wtu', sa.Integer(), nullable=True, comment='월 예산 WTU'),
    sa.Column('confidence_target', sa.Float(), nullable=True, comment='품질 목표 점수 (0.0-1.0)'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='생성일시'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='수정일시'),
    sa.ForeignKeyConstraint(['default_model_id'], ['model_catalog.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('board_id')
    )
    op.create_index('ix_board_model_policy_default_model', 'board_model_policy', ['default_model_id'], unique=False)
    op.create_table('model_weight_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='가중치 히스토리 ID'),
    sa.Column('model_id', sa.Integer(), nullable=False, comment='모델 카탈로그 ID (외래키)'),
    sa.Column('w_in', sa.Float(), nullable=True, comment='입력 토큰 WTU 가중치'),
    sa.Column('w_out', sa.Float(), nullable=True, comment='출력 토큰 WTU 가중치'),
    sa.Column('w_embed', sa.Float(), nullable=True, comment='임베딩 토큰 WTU 가중치'),
    sa.Column('reason', sa.Text(), nullable=True, comment='가중치 변경 사유'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='생성일시'),
    sa.ForeignKeyConstraint(['model_id'], ['model_catalog.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_model_weight_history_created_at', 'model_weight_history', ['created_at'], unique=False)
    op.create_index('ix_model_weight_history_model_id', 'model_weight_history', ['model_id'], unique=False)
    op.create_table('user_model_policy',
    sa.Column('user_id', sa.Integer(), nullable=False, comment='사용자 ID'),
    sa.Column('default_model_id', sa.Integer(), nullable=True, comment='기본 모델 ID (외래키)'),
    sa.Column('allowed_model_ids', sa.ARRAY(sa.Integer()), nullable=True, comment='허용 모델 ID 배열'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='생성일시'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='수정일시'),
    sa.ForeignKeyConstraint(['default_model_id'], ['model_catalog.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index('ix_user_model_policy_default_model', 'user_model_policy', ['default_model_id'], unique=False)
    op.drop_index(op.f('ix_model_pricing_active'), table_name='model_pricing')
    op.drop_index(op.f('ix_model_pricing_name'), table_name='model_pricing')
    op.drop_index(op.f('ix_model_pricing_type'), table_name='model_pricing')
    op.drop_table('model_pricing')
    op.drop_index(op.f('ix_items_fts'), table_name='items', postgresql_using='gin')
    op.drop_index(op.f('ix_items_source_url'), table_name='items')
    op.create_index(op.f('ix_items_source_url'), 'items', ['source_url'], unique=False)
    op.drop_column('items', 'fts')
    op.add_column('usage_meter', sa.Column('selected_model_id', sa.Integer(), nullable=True, comment='사용자가 선택한 모델 ID'))
    op.add_column('usage_meter', sa.Column('model_weights_snapshot', sa.JSON(), nullable=True, comment='실행 시점의 모델 가중치 스냅샷'))
    op.add_column('usage_meter', sa.Column('board_id', sa.UUID(), nullable=True, comment='보드 ID (정책 추적용)'))
    op.create_index('ix_usage_meter_board_id', 'usage_meter', ['board_id'], unique=False)
    op.create_index('ix_usage_meter_selected_model', 'usage_meter', ['selected_model_id'], unique=False)
    op.create_foreign_key(None, 'usage_meter', 'model_catalog', ['selected_model_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'usage_meter', type_='foreignkey')
    op.drop_index('ix_usage_meter_selected_model', table_name='usage_meter')
    op.drop_index('ix_usage_meter_board_id', table_name='usage_meter')
    op.drop_column('usage_meter', 'board_id')
    op.drop_column('usage_meter', 'model_weights_snapshot')
    op.drop_column('usage_meter', 'selected_model_id')
    op.add_column('items', sa.Column('fts', postgresql.TSVECTOR(), sa.Computed("to_tsvector('simple'::regconfig, (((((COALESCE(title, ''::character varying))::text || ' '::text) || COALESCE(description, ''::text)) || ' '::text) || COALESCE(summary, ''::text)))", persisted=True), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_items_source_url'), table_name='items')
    op.create_index(op.f('ix_items_source_url'), 'items', ['source_url'], unique=True)
    op.create_index(op.f('ix_items_fts'), 'items', ['fts'], unique=False, postgresql_using='gin')
    op.create_table('model_pricing',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False, comment='가격 정보 ID'),
    sa.Column('model_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='모델명 (예: gpt-3.5-turbo, text-embedding-3-small)'),
    sa.Column('model_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='모델 유형: llm, embedding'),
    sa.Column('price_input', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='입력 토큰 가격 (USD/1M)'),
    sa.Column('price_output', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='출력 토큰 가격 (USD/1M)'),
    sa.Column('price_embedding', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='임베딩 가격 (USD/1M)'),
    sa.Column('weight_input', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='입력 토큰 WTU 가중치'),
    sa.Column('weight_output', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='출력 토큰 WTU 가중치'),
    sa.Column('weight_embedding', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True, comment='임베딩 토큰 WTU 가중치'),
    sa.Column('reference_model', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='기준 모델명'),
    sa.Column('reference_price_input', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False, comment='기준 입력 가격 (USD/1M)'),
    sa.Column('reference_price_output', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False, comment='기준 출력 가격 (USD/1M)'),
    sa.Column('cached_factor', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False, comment='캐시 토큰 할인율'),
    sa.Column('embedding_alpha', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False, comment='임베딩 가중치 조정 계수'),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='활성 상태'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='생성일시'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='수정일시'),
    sa.PrimaryKeyConstraint('id', name=op.f('model_pricing_pkey')),
    sa.UniqueConstraint('model_name', name=op.f('model_pricing_model_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_model_pricing_type'), 'model_pricing', ['model_type'], unique=False)
    op.create_index(op.f('ix_model_pricing_name'), 'model_pricing', ['model_name'], unique=False)
    op.create_index(op.f('ix_model_pricing_active'), 'model_pricing', ['is_active'], unique=False)
    op.drop_index('ix_user_model_policy_default_model', table_name='user_model_policy')
    op.drop_table('user_model_policy')
    op.drop_index('ix_model_weight_history_model_id', table_name='model_weight_history')
    op.drop_index('ix_model_weight_history_created_at', table_name='model_weight_history')
    op.drop_table('model_weight_history')
    op.drop_index('ix_board_model_policy_default_model', table_name='board_model_policy')
    op.drop_table('board_model_policy')
    op.drop_index('ix_model_catalog_type_status', table_name='model_catalog')
    op.drop_index('ix_model_catalog_status', table_name='model_catalog')
    op.drop_index('ix_model_catalog_provider', table_name='model_catalog')
    op.drop_index('ix_model_catalog_name', table_name='model_catalog')
    op.drop_index('ix_model_catalog_alias', table_name='model_catalog')
    op.drop_table('model_catalog')
    # ### end Alembic commands ###
