"""User 테이블 업데이트 및 관련 필드 추가

Revision ID: 40c23c4857f2
Revises: 92c27db39589
Create Date: 2025-08-07 19:59:21.381899

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
# pgvector 관련 import (필요시)
# import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision: str = '40c23c4857f2'
down_revision: Union[str, Sequence[str], None] = '92c27db39589'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False, comment='서비스 서버의 사용자 ID'),
    sa.Column('ai_preferences', sa.Text(), nullable=True, comment='AI 개인화 설정 (JSON)'),
    sa.Column('embedding_model_version', sa.String(length=50), nullable=True, comment='사용 중인 임베딩 모델 버전'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='활성 상태'),
    sa.Column('last_sync_at', sa.DateTime(timezone=True), nullable=True, comment='서비스 서버와 마지막 동기화 시간'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_users_active', 'users', ['is_active'], unique=False)
    op.create_index('ix_users_sync_time', 'users', ['last_sync_at'], unique=False)
    op.add_column('item_tags', sa.Column('user_id', sa.UUID(), nullable=False, comment='사용자 ID (검색 성능 향상용)'))
    op.create_index(op.f('ix_item_tags_user_id'), 'item_tags', ['user_id'], unique=False)
    op.create_index('ix_item_tags_user_tag', 'item_tags', ['user_id', 'tag'], unique=False)
    op.create_index('ix_item_tags_user_type', 'item_tags', ['user_id', 'tag_type'], unique=False)
    op.create_foreign_key(None, 'item_tags', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('items', sa.Column('user_id', sa.UUID(), nullable=False, comment='사용자 ID (외래키)'))
    op.drop_index(op.f('ix_items_title_trgm'), table_name='items', postgresql_ops={'title': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_index('ix_items_user_id', 'items', ['user_id'], unique=False)
    op.create_index('ix_items_user_status', 'items', ['user_id', 'processing_status'], unique=False)
    op.create_index('ix_items_user_type', 'items', ['user_id', 'item_type'], unique=False)
    op.create_foreign_key(None, 'items', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('search_histories', sa.Column('user_id', sa.UUID(), nullable=False, comment='사용자 ID (외래키)'))
    op.create_index(op.f('ix_search_histories_user_id'), 'search_histories', ['user_id'], unique=False)
    op.create_index('ix_search_histories_user_query', 'search_histories', ['user_id', 'query'], unique=False)
    op.create_foreign_key(None, 'search_histories', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'search_histories', type_='foreignkey')
    op.drop_index('ix_search_histories_user_query', table_name='search_histories')
    op.drop_index(op.f('ix_search_histories_user_id'), table_name='search_histories')
    op.drop_column('search_histories', 'user_id')
    op.drop_constraint(None, 'items', type_='foreignkey')
    op.drop_index('ix_items_user_type', table_name='items')
    op.drop_index('ix_items_user_status', table_name='items')
    op.drop_index('ix_items_user_id', table_name='items')
    op.create_index(op.f('ix_items_title_trgm'), 'items', ['title'], unique=False, postgresql_ops={'title': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_column('items', 'user_id')
    op.drop_constraint(None, 'item_tags', type_='foreignkey')
    op.drop_index('ix_item_tags_user_type', table_name='item_tags')
    op.drop_index('ix_item_tags_user_tag', table_name='item_tags')
    op.drop_index(op.f('ix_item_tags_user_id'), table_name='item_tags')
    op.drop_column('item_tags', 'user_id')
    op.drop_index('ix_users_sync_time', table_name='users')
    op.drop_index('ix_users_active', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
