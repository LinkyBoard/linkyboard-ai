"""item embedding metadata table 생성

Revision ID: 143aed6078d3
Revises: 0b23f081d071
Create Date: 2025-08-08 02:51:53.893147

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
# pgvector 관련 import (필요시)
import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision: str = '143aed6078d3'
down_revision: Union[str, Sequence[str], None] = '0b23f081d071'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('item_embedding_metadatas',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='임베딩 메타데이터 ID'),
    sa.Column('item_id', sa.Integer(), nullable=True, comment='아이템 ID (외래키)'),
    sa.Column('embedding_model', sa.String(length=50), nullable=False, comment='임베딩 모델명'),
    sa.Column('embedding_version', sa.String(length=50), nullable=False, comment='임베딩 모델 버전'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='생성일시'),
    sa.Column('chunk_number', sa.Integer(), nullable=False, comment='청크 번호 (0부터 시작)'),
    sa.Column('chunk_content', sa.Text(), nullable=False, comment='청크 텍스트 내용'),
    sa.Column('chunk_size', sa.Integer(), nullable=True, comment='청크 크기(문자 수)'),
    sa.Column('token_count', sa.Integer(), nullable=True, comment='토큰 수'),
    sa.Column('start_position', sa.Integer(), nullable=True, comment='원본에서 시작 위치'),
    sa.Column('end_position', sa.Integer(), nullable=True, comment='원본에서 끝 위치'),
    sa.Column('total_chunks', sa.Integer(), nullable=False, comment='총 청크 수'),
    sa.Column('embedding_vector', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=False, comment='아이템 임베딩 벡터'),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_item_embedding_metadatas_item_chunk', 'item_embedding_metadatas', ['item_id', 'chunk_number'], unique=True)
    op.create_index('ix_item_embedding_metadatas_item_id', 'item_embedding_metadatas', ['item_id'], unique=False)
    op.create_index('ix_item_embedding_metadatas_model_version', 'item_embedding_metadatas', ['embedding_model', 'embedding_version'], unique=False)
    op.drop_index(op.f('ix_items_source_url'), table_name='items')
    op.create_index('ix_items_source_url', 'items', ['source_url'], unique=True)
    op.drop_column('items', 'content_embedding')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('items', sa.Column('content_embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), autoincrement=False, nullable=True, comment='콘텐츠 벡터 임베딩'))
    op.drop_index('ix_items_source_url', table_name='items')
    op.create_index(op.f('ix_items_source_url'), 'items', ['source_url'], unique=False)
    op.drop_index('ix_item_embedding_metadatas_model_version', table_name='item_embedding_metadatas')
    op.drop_index('ix_item_embedding_metadatas_item_id', table_name='item_embedding_metadatas')
    op.drop_index('ix_item_embedding_metadatas_item_chunk', table_name='item_embedding_metadatas')
    op.drop_table('item_embedding_metadatas')
    # ### end Alembic commands ###
