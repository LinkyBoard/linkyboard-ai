"""Add model pricing table and update usage meter

Revision ID: 13b5ead0b510
Revises: e2e28c83f915
Create Date: 2025-08-17 17:20:57.699237

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
# pgvector 관련 import (필요시)
# import pgvector.sqlalchemy
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '13b5ead0b510'
down_revision: Union[str, Sequence[str], None] = 'e2e28c83f915'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('model_pricing',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='가격 정보 ID'),
    sa.Column('model_name', sa.String(length=100), nullable=False, comment='모델명 (예: gpt-3.5-turbo, text-embedding-3-small)'),
    sa.Column('model_type', sa.String(length=20), nullable=False, comment='모델 유형: llm, embedding'),
    sa.Column('price_input', sa.Float(), nullable=True, comment='입력 토큰 가격 (USD/1M)'),
    sa.Column('price_output', sa.Float(), nullable=True, comment='출력 토큰 가격 (USD/1M)'),
    sa.Column('price_embedding', sa.Float(), nullable=True, comment='임베딩 가격 (USD/1M)'),
    sa.Column('weight_input', sa.Float(), nullable=True, comment='입력 토큰 WTU 가중치'),
    sa.Column('weight_output', sa.Float(), nullable=True, comment='출력 토큰 WTU 가중치'),
    sa.Column('weight_embedding', sa.Float(), nullable=True, comment='임베딩 토큰 WTU 가중치'),
    sa.Column('reference_model', sa.String(length=100), nullable=False, comment='기준 모델명'),
    sa.Column('reference_price_input', sa.Float(), nullable=False, comment='기준 입력 가격 (USD/1M)'),
    sa.Column('reference_price_output', sa.Float(), nullable=False, comment='기준 출력 가격 (USD/1M)'),
    sa.Column('cached_factor', sa.Float(), nullable=False, comment='캐시 토큰 할인율'),
    sa.Column('embedding_alpha', sa.Float(), nullable=False, comment='임베딩 가중치 조정 계수'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='활성 상태'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='생성일시'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='수정일시'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model_name')
    )
    op.create_index('ix_model_pricing_active', 'model_pricing', ['is_active'], unique=False)
    op.create_index('ix_model_pricing_name', 'model_pricing', ['model_name'], unique=False)
    op.create_index('ix_model_pricing_type', 'model_pricing', ['model_type'], unique=False)
    
    # Keep FTS column and index (don't drop)
    # op.drop_index(op.f('ix_items_fts'), table_name='items', postgresql_using='gin')
    # op.drop_column('items', 'fts')
    
    op.add_column('usage_meter', sa.Column('llm_model', sa.String(length=100), nullable=True, comment='사용된 LLM 모델명'))
    op.add_column('usage_meter', sa.Column('embedding_model', sa.String(length=100), nullable=True, comment='사용된 임베딩 모델명'))
    op.add_column('usage_meter', sa.Column('estimated_cost_usd', sa.Float(), nullable=True, comment='추정 비용 (USD)'))
    op.create_index('ix_usage_meter_embedding_model', 'usage_meter', ['embedding_model'], unique=False)
    op.create_index('ix_usage_meter_llm_model', 'usage_meter', ['llm_model'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_usage_meter_llm_model', table_name='usage_meter')
    op.drop_index('ix_usage_meter_embedding_model', table_name='usage_meter')
    op.drop_column('usage_meter', 'estimated_cost_usd')
    op.drop_column('usage_meter', 'embedding_model')
    op.drop_column('usage_meter', 'llm_model')
    
    # Keep FTS column and index (don't restore old version)
    # op.add_column('items', sa.Column('fts', postgresql.TSVECTOR(), sa.Computed("to_tsvector('simple'::regconfig, (((((COALESCE(title, ''::character varying))::text || ' '::text) || COALESCE(description, ''::text)) || ' '::text) || COALESCE(summary, ''::text)))", persisted=True), autoincrement=False, nullable=True))
    # op.create_index(op.f('ix_items_fts'), 'items', ['fts'], unique=False, postgresql_using='gin')
    
    op.drop_index('ix_model_pricing_type', table_name='model_pricing')
    op.drop_index('ix_model_pricing_name', table_name='model_pricing')
    op.drop_index('ix_model_pricing_active', table_name='model_pricing')
    op.drop_table('model_pricing')
    # ### end Alembic commands ###
